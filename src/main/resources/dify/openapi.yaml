openapi: 3.0.3
info:
  title: Fess Dify Plugin API
  description: A retrieval API for querying documents
  version: 1.0.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/dify
tags:
  - name: search
    description: Search operations
paths:
  /query:
    get:
      tags:
        - search
      summary: Query
      description: Finds documents by search conditions
      operationId: search_documents
      parameters:
        - name: query
          in: query
          description: Search words
          required: false
          schema:
            type: string
            example: Fess
        - name: top_k
          in: query
          description: Top K
          required: false
          schema:
            type: integer
            minimum: 1
            default: 3
            example: 3
        - name: operator
          in: query
          description: Query Operator
          required: false
          schema:
            type: string
            enum: [AND, OR]
      responses:
        "200":
          $ref: '#/components/responses/SuccessResponse'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "404":
          $ref: '#/components/responses/NotFoundError'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
        - HTTPBearer: []
components:
  responses:
    SuccessResponse:
      description: Successful Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/QueryResponse"
    UnauthorizedError:
      description: Unauthorized Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HTTPValidationError"
    NotFoundError:
      description: Bad Request or Validation Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HTTPValidationError"
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HTTPValidationError"
  schemas:
    Document:
      title: Document
      required:
        - text
      type: object
      properties:
        id:
          title: Id
          type: string
          example: "12345"
        url:
          title: URL
          type: string
          example: "http://example.com/document/12345"
        content:
          title: Content
          type: string
          example: "This is the content of the document."
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"
    QueryResponse:
      title: QueryResponse
      required:
        - results
      type: object
      properties:
        data:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/Document"
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
